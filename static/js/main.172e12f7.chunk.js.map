{"version":3,"sources":["Header.js","core/keywords.js","core/sb.js","core/LexicalAnalyzer.js","Main.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","KEYWORDS","FakeAutomata","args","statusTable","finalStatus","transitions","string","status","char","inputStatus","i","length","indexOf","isOperator","isArithmeticOperator","isLogicalOperator","isConstant","isUnsigned","isIntenger","analyzeWord","word","isIdentifier","isDelimiter","isComment","analyzeString","content","replace","result","buffer","slice","index","substring","push","type","key","TokenTable","props","typeStringsCHN","tokens","map","token","Main","state","text","handleFileChange","bind","handleTextChange","handleSubmit","handleReset","fileInput","document","getElementById","file","files","reader","FileReader","addEventListener","setState","value","readAsText","code","this","id","onChange","data-browse","language","fontSize","defaultTheme","onClick","React","Component","Footer","class","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.172e12f7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"@fortawesome/fontawesome-free/css/all.css\";\r\nimport \"./css/Header.css\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <i className=\"fas fa-anchor\"></i>\r\n      <h1>LEXICAL ANALYZER</h1>\r\n    </div>\r\n  );\r\n}\r\n","export const KEYWORDS = [\r\n  \"auto\",\r\n  \"break\",\r\n  \"case\",\r\n  \"char\",\r\n  \"char\",\r\n  \"const\",\r\n  \"continue\",\r\n  \"default\",\r\n  \"do\",\r\n  \"double\",\r\n  \"else\",\r\n  \"enum\",\r\n  \"extern\",\r\n  \"float\",\r\n  \"for\",\r\n  \"goto\",\r\n  \"if\",\r\n  \"inline\",\r\n  \"int\",\r\n  \"long\",\r\n  \"register\",\r\n  \"restrict\",\r\n  \"return\",\r\n  \"short\",\r\n  \"signed\",\r\n  \"sizeof\",\r\n  \"static\",\r\n  \"struct\",\r\n  \"switch\",\r\n  \"typedef\",\r\n  \"union\",\r\n  \"unsigned\",\r\n  \"void\",\r\n  \"volatile\",\r\n  \"while\",\r\n  \"_Alignas\",\r\n  \"_Alignof\",\r\n  \"_Atomic\",\r\n  \"_Bool\",\r\n  \"_Complex\",\r\n  \"_Generic\",\r\n  \"_Imaginary\",\r\n  \"_Noreturn\",\r\n  \"_Static_assert\",\r\n  \"Thread_local\",\r\n];\r\n","export default function FakeAutomata(args) {\r\n  let statusTable = args.statusTable;\r\n  let finalStatus = args.finalStatus;\r\n  let transitions = args.transitions;\r\n  let string = args.string;\r\n\r\n  let status = 1;\r\n  for (let char of string) {\r\n    let inputStatus = 0;\r\n    for (let i = 0; i < transitions.length; i++) {\r\n      if (transitions[i].indexOf(char) !== -1) {\r\n        inputStatus = i + 1;\r\n        break;\r\n      } else if (i === transitions.length - 1 && transitions[i] === \"_others\") {\r\n        inputStatus = i + 1;\r\n        break;\r\n      }\r\n    }\r\n    status = statusTable[status][inputStatus];\r\n  }\r\n\r\n  return finalStatus.indexOf(status) !== -1 ? true : false;\r\n}\r\n","import \"./keywords\";\r\nimport { KEYWORDS } from \"./keywords\";\r\nimport FakeAutomata from \"./sb\";\r\n\r\nfunction isKeyword(string) {\r\n  if (KEYWORDS.indexOf(string) !== -1) return true;\r\n  else return false;\r\n}\r\n\r\nfunction isIdentifier(string) {\r\n  let statusTable = [\r\n    [0, 0, 0],\r\n    [0, 2, 0],\r\n    [0, 2, 2],\r\n  ];\r\n  let finalStatus = [2];\r\n  let transitions = [\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_\",\r\n    \"0123456789\",\r\n  ];\r\n\r\n  return FakeAutomata({\r\n    statusTable,\r\n    finalStatus,\r\n    transitions,\r\n    string,\r\n  });\r\n}\r\n\r\nfunction isArithmeticOperator(string) {\r\n  let statusTable = [\r\n    [0, 0, 0, 0],\r\n    [0, 2, 3, 4],\r\n    [0, 5, 0, 0],\r\n    [0, 0, 6, 0],\r\n    [0, 0, 0, 0],\r\n    [0, 0, 0, 0],\r\n    [0, 0, 0, 0],\r\n  ];\r\n  let finalStatus = [2, 3, 4, 5, 6];\r\n  let transitions = [[\"+\"], [\"-\"], [\"*\", \"/\", \"%\", \"=\"]];\r\n\r\n  return FakeAutomata({\r\n    statusTable,\r\n    finalStatus,\r\n    transitions,\r\n    string,\r\n  });\r\n}\r\n\r\nfunction isLogicalOperator(string) {\r\n  let statusTable = [\r\n    [0, 0, 0],\r\n    [0, 2, 3],\r\n    [0, 0, 4],\r\n    [0, 0, 4],\r\n    [0, 0, 0],\r\n  ];\r\n  let finalStatus = [2, 4];\r\n  let transitions = [[\"!\", \">\", \"<\"], [\"=\"]];\r\n\r\n  return FakeAutomata({\r\n    statusTable,\r\n    finalStatus,\r\n    transitions,\r\n    string,\r\n  });\r\n}\r\n\r\nfunction isOperator(string) {\r\n  return isArithmeticOperator(string) || isLogicalOperator(string);\r\n}\r\n\r\nfunction isUnsigned(string) {\r\n  let statusTable = [\r\n    [0, 0, 0, 0, 0],\r\n    [0, 2, 0, 0, 0],\r\n    [0, 2, 3, 5, 0],\r\n    [0, 4, 0, 0, 0],\r\n    [0, 4, 0, 5, 0],\r\n    [0, 7, 0, 0, 6],\r\n    [0, 7, 0, 0, 0],\r\n    [0, 7, 0, 0, 0],\r\n  ];\r\n  let finalStatus = [2, 4, 7];\r\n  let transitions = [\"0123456789\", \".\", \"Ee\", \"+-\"];\r\n\r\n  return FakeAutomata({\r\n    statusTable,\r\n    finalStatus,\r\n    transitions,\r\n    string,\r\n  });\r\n}\r\n\r\nfunction isIntenger(string) {\r\n  let statusTable = [\r\n    [0, 0, 0, 0, 0, 0],\r\n    [0, 3, 2, 0, 0, 0],\r\n    [0, 2, 2, 0, 0, 0],\r\n    [0, 0, 0, 4, 5, 0],\r\n    [0, 0, 6, 0, 0, 6],\r\n    [0, 5, 0, 0, 5, 0],\r\n    [0, 6, 6, 0, 0, 6],\r\n  ];\r\n  let finalStatus = [2, 3, 5, 6];\r\n  let transitions = [\"0\", \"123456789\", \"x\", \"1234567\", \"abcdefABCDEF\"];\r\n\r\n  return FakeAutomata({\r\n    statusTable,\r\n    finalStatus,\r\n    transitions,\r\n    string,\r\n  });\r\n}\r\n\r\nfunction isConstant(string) {\r\n  return isUnsigned(string) || isIntenger(string);\r\n}\r\n\r\nfunction isDelimiter(string) {\r\n  if (string.length > 1) return false;\r\n  let delimiters = \",{}[]();\";\r\n  return delimiters.indexOf(string) !== -1 ? true : false;\r\n}\r\n\r\nfunction isComment(string) {\r\n  let statusTable = [\r\n    [0, 0, 0, 0],\r\n    [0, 2, 0, 0],\r\n    [0, 0, 3, 0],\r\n    [0, 0, 4, 3],\r\n    [0, 5, 4, 3],\r\n    [0, 0, 0, 0],\r\n  ];\r\n  let finalStatus = [5];\r\n  let transitions = [\"/\", \"*\", \"_others\"];\r\n\r\n  return FakeAutomata({\r\n    statusTable,\r\n    finalStatus,\r\n    transitions,\r\n    string,\r\n  });\r\n}\r\n\r\nfunction analyzeWord(word) {\r\n  if (word.length === 0) {\r\n    return 0;\r\n  } else if (isKeyword(word)) {\r\n    return 1;\r\n  } else if (isIdentifier(word)) {\r\n    return 2;\r\n  } else if (isOperator(word)) {\r\n    return 3;\r\n  } else if (isDelimiter(word)) {\r\n    return 4;\r\n  } else if (isConstant(word)) {\r\n    return 5;\r\n  } else if (isComment(word)) {\r\n    return 6;\r\n  } else {\r\n    return 0;\r\n  }\r\n}\r\n\r\n/**\r\n * 读取字符串，返回一个json数组\r\n * @param 字符串\r\n * @returns 一个json数组\r\n */\r\nfunction analyzeString(string) {\r\n  let content = string.replace(/[\\r\\n]/g, \"\");\r\n  let result = [];\r\n\r\n  while (content.length > 0) {\r\n    let buffer = content.slice();\r\n    let index = content.length - 1;\r\n\r\n    for (; analyzeWord(buffer) === 0 && index > 0; index--) {\r\n      buffer = buffer.substring(0, buffer.length - 1);\r\n    }\r\n\r\n    if (index === 0 && analyzeWord(buffer) === 0) {\r\n      content = content.substring(1);\r\n    } else {\r\n      result.push({\r\n        type: analyzeWord(buffer),\r\n        content: buffer,\r\n        key: result.length\r\n      });\r\n      content = content.substring(index + 1);\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport default analyzeString;\r\n","import React from \"react\";\r\nimport analyzeString from \"./core/LexicalAnalyzer\";\r\nimport { CodeFlaskReact } from \"react-codeflask\";\r\n\r\nimport \"./css/Main.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      text: \"/* Input your Code here Or Browse the program file from above */\",\r\n      result: [],\r\n    };\r\n    this.handleFileChange = this.handleFileChange.bind(this);\r\n    this.handleTextChange = this.handleTextChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleReset = this.handleReset.bind(this);\r\n  }\r\n\r\n  handleFileChange() {\r\n    let fileInput = document.getElementById(\"file-input\");\r\n    let file = fileInput.files[0];\r\n    let reader = new FileReader();\r\n    reader.addEventListener(\"loadend\", () => {\r\n      this.setState({\r\n        text: reader.result,\r\n      });\r\n      fileInput.value = \"\";\r\n    });\r\n    reader.readAsText(file);\r\n  }\r\n\r\n  handleTextChange(code) {\r\n    this.setState({\r\n      text: code,\r\n    });\r\n  }\r\n\r\n  handleSubmit() {\r\n    let string = this.state.text;\r\n    let result = analyzeString(string);\r\n    this.setState({ result });\r\n  }\r\n\r\n  handleReset() {\r\n    this.setState({ text: \"\", result: [] });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main row\">\r\n        <div className=\"left-box col-lg-6 col-md-6 col-sm-6 col-xs-1\">\r\n          <div className=\"custom-file\">\r\n            <input\r\n              className=\"custom-file-input\"\r\n              type=\"file\"\r\n              id=\"file-input\"\r\n              onChange={this.handleFileChange}\r\n            />\r\n            <label className=\"custom-file-label\" data-browse=\"Browse\">\r\n              Browse File from Computer\r\n            </label>\r\n          </div>\r\n\r\n          <CodeFlaskReact\r\n            code={this.state.text}\r\n            onChange={this.handleTextChange}\r\n            id=\"code-editor\"\r\n            language=\"clike\"\r\n            fontSize={25}\r\n            defaultTheme={false}\r\n            \r\n          />\r\n\r\n          <div className=\"buttons row\">\r\n            <div className=\"col-lg-6 col-xs-1\">\r\n              <button className=\"btn btn-warning\" onClick={this.handleReset}>\r\n                Reset <i className=\"fas fa-sync-alt\"></i>\r\n              </button>\r\n            </div>\r\n            <div className=\"col-lg-6 col-xs-1\">\r\n              <button className=\"btn btn-primary\" onClick={this.handleSubmit}>\r\n                Analyse <i className=\"fas fa-angle-right\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"right-box col-lg-6 col-md-6 col-sm-6 col-xs-1\">\r\n          <h2>OUTPUT</h2>\r\n          <div className=\"token-table-container\">\r\n            <TokenTable tokens={this.state.result} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction TokenTable(props) {\r\n  let typeStringsCHN = [\r\n    \"Error\", //error\r\n    \"Keyword\", //Keyword\r\n    \"Identifier\", // Identifier\r\n    \"Operator\", //Operator\r\n    \"Seperator\", //separator\r\n    \"Constant\",// Constant\r\n    \"Comment\", // Comment\r\n  ];\r\n  const tokens = props.tokens.map((token) => {\r\n    return (\r\n      <tr key={token.key}>\r\n        <td>{token.key + 1}</td>\r\n        <td>{typeStringsCHN[token.type]}</td>\r\n        <td>{token.content}</td>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <table className=\"table table-bordered\">\r\n      <thead>\r\n        <tr>\r\n          <td>ID</td>\r\n          <td>Type</td>\r\n          <td>Token</td>\r\n        </tr>\r\n      </thead>\r\n      <tbody>{tokens}</tbody>\r\n    </table>\r\n  );\r\n}\r\nexport default Main;\r\n","import React from 'react'\r\nimport \"./css/Footer.css\"\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <h6>\r\n        Made by Arsh Bajaj with <i class=\"fas fa-heart fa-beat\"></i>\r\n      </h6>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\n\nimport \"./css/App.css\"\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return (\n    <div className=\"App container-fluid\">\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}